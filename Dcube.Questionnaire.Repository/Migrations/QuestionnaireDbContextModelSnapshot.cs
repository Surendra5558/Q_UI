// <auto-generated />
using System;
using DCube.Questionnaire.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DCube.Questionnaire.Repository.Migrations
{
    [DbContext(typeof(QuestionnaireDbContext))]
    partial class QuestionnaireDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_Client_Name");

                    b.ToTable("Client", "Dcube");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 315, DateTimeKind.Utc).AddTicks(8574),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 315, DateTimeKind.Utc).AddTicks(8580),
                            Name = "Dcube DataSciences",
                            RowId = new Guid("73df9f86-5731-42a6-861f-fb1884ccd8f9")
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 315, DateTimeKind.Utc).AddTicks(9752),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 315, DateTimeKind.Utc).AddTicks(9754),
                            Name = "KonaAI",
                            RowId = new Guid("a6b023e3-b526-4ea9-9dc9-d5ac8b0a926c")
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 315, DateTimeKind.Utc).AddTicks(9758),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 315, DateTimeKind.Utc).AddTicks(9760),
                            Name = "BCCI",
                            RowId = new Guid("87a49b41-e17a-4720-9a3a-bc728556512e")
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.ClientExtension", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPersonEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPersonPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfExternalPartners")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLocations")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSuppliers")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ClientExtension", "Dcube");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Hitech City",
                            ClientId = 1L,
                            ContactPerson = "Krishna Chaitanya Kona",
                            ContactPersonEmail = "kkona@konaai.com",
                            ContactPersonPhone = "4012020000",
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 317, DateTimeKind.Utc).AddTicks(293),
                            IsActive = true,
                            IsDeleted = false,
                            LegalName = "Dcube Pvt Ltd",
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 317, DateTimeKind.Utc).AddTicks(294),
                            NumberOfEmployees = 50,
                            NumberOfExternalPartners = 0,
                            NumberOfLocations = 0,
                            NumberOfSuppliers = 0,
                            PhoneNumber = "4012020000",
                            RowId = new Guid("4473bdf5-c335-4f8e-8e75-969c7d3096ed")
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Deloitte Drive Hitech City",
                            ClientId = 2L,
                            ContactPerson = "Chaitanya Alluri",
                            ContactPersonEmail = "calluri@konaai.com",
                            ContactPersonPhone = "3012020000",
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 317, DateTimeKind.Utc).AddTicks(952),
                            IsActive = true,
                            IsDeleted = false,
                            LegalName = "Kona AI LLP",
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 317, DateTimeKind.Utc).AddTicks(953),
                            NumberOfEmployees = 100,
                            NumberOfExternalPartners = 0,
                            NumberOfLocations = 0,
                            NumberOfSuppliers = 0,
                            PhoneNumber = "3012020000",
                            RowId = new Guid("628d7d3b-67d9-4a0e-992d-a20af9f59eaf")
                        },
                        new
                        {
                            Id = 3L,
                            Address = "Wankandi Stadium Mumbai",
                            ClientId = 3L,
                            ContactPerson = "Jay Shah",
                            ContactPersonEmail = "jshah@bccicontrollertest.com",
                            ContactPersonPhone = "2012020000",
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 317, DateTimeKind.Utc).AddTicks(955),
                            IsActive = true,
                            IsDeleted = false,
                            LegalName = "Board of Cricket for Controller in India",
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 317, DateTimeKind.Utc).AddTicks(956),
                            NumberOfEmployees = 10000,
                            NumberOfExternalPartners = 54,
                            NumberOfLocations = 50,
                            NumberOfSuppliers = 401,
                            PhoneNumber = "2012020000",
                            RowId = new Guid("6979d943-52ba-4b6e-9f2b-70d74678ba2c")
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.ClientInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientTemplateInformationSectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<long>("InformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Response")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ClientInformation", "Dcube");
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.ClientQuestionnaireResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientTemplateSectionResponseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comments")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<long>("QuestionnaireId")
                        .HasColumnType("bigint");

                    b.Property<string>("Response")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ClientQuestionnaireResponse", "Dcube");
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.ClientTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("TemplateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ClientTemplate", "Dcube");
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.ClientTemplateDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientTemplateId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<long>("DocumentTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("ClientTemplateDocument", "Dcube");
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.ClientTemplateInformationSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientTemplateId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<long>("InformationSectionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ClientTemplateInformationSection", "Dcube");
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.ClientTemplateSectionResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientTemplateId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("TemplateSectionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ClientTemplateSectionResponse", "Dcube");
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.ClientTemplateSectionSolution", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientTemplateSectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Resolution")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<string>("Variance")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("ClientTemplateSectionSolution", "Dcube");
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.Information", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("InformationSectionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Options")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("OrderBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("RenderTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Information", "Dcube");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(2444),
                            Description = "How many total endpoints are currently in use (workstations, laptops, servers, mobile devices)?",
                            InformationSectionId = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(2444),
                            OrderBy = 1,
                            RenderTypeId = 8,
                            RowId = new Guid("747df2fe-59c8-4ee0-81a2-d191b683607a")
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(2941),
                            Description = "How many physical or virtual office locations do you operate from?",
                            InformationSectionId = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(2941),
                            OrderBy = 2,
                            RenderTypeId = 8,
                            RowId = new Guid("da1455b3-ec0f-4f88-8e30-91dbf304df77")
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(2943),
                            Description = "What is your current technology stack (OS, application platforms, infrastructure tools)?",
                            InformationSectionId = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(2944),
                            Options = "['Microsoft','Google','Apple','Other']",
                            OrderBy = 3,
                            RenderTypeId = 6,
                            RowId = new Guid("759f8d4d-cfc5-46a5-8966-4ea31f2f2009")
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3033),
                            Description = "Are there any OT (Operational Technology) systems or IoT devices in use?",
                            InformationSectionId = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3033),
                            OrderBy = 4,
                            RenderTypeId = 8,
                            RowId = new Guid("c4321149-85f9-4a08-bf84-8015cf51d1c0")
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3041),
                            Description = "What Endpoint Detection and Response (EDR) solution(s) are currently deployed?",
                            InformationSectionId = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3041),
                            OrderBy = 1,
                            RenderTypeId = 8,
                            RowId = new Guid("d5feaf07-c950-465b-bf31-3f42ae69c29e")
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3060),
                            Description = "Are antivirus or anti-malware solutions deployed on all endpoints?",
                            InformationSectionId = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3060),
                            OrderBy = 2,
                            RenderTypeId = 8,
                            RowId = new Guid("79b1df97-16cc-4acc-ada6-b6b5bd6f712d")
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3062),
                            Description = "Do you use any device management tools like MDM (Mobile Device Management)?",
                            InformationSectionId = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3063),
                            OrderBy = 3,
                            RenderTypeId = 8,
                            RowId = new Guid("6e5532d9-b9f7-4850-8563-6fff8715e623")
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3064),
                            Description = "Are you using any public, private, or hybrid cloud infrastructure? Please specify (e.g., AWS, Azure, GCP).",
                            InformationSectionId = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3065),
                            OrderBy = 1,
                            RenderTypeId = 8,
                            RowId = new Guid("9e280423-08ee-4bf2-86c3-2e42f538b3a4")
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3073),
                            Description = "Are workloads or data hosted in the cloud? If yes, what types (VMs, containers, SaaS, etc.)?",
                            InformationSectionId = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3073),
                            OrderBy = 2,
                            RenderTypeId = 8,
                            RowId = new Guid("6444f768-a511-4a03-bcbf-f5554d5736e5")
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3074),
                            Description = "Are you using Microsoft 365 (O365)? If yes, which services (Exchange Online, Teams, SharePoint, etc.)?",
                            InformationSectionId = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3075),
                            OrderBy = 1,
                            RenderTypeId = 8,
                            RowId = new Guid("36d6f9dd-941a-490e-a1c2-98b1e4082667")
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3077),
                            Description = "Are you using Google Workspace (G Suite)? If yes, which services (Gmail, Drive, Meet, etc.)?",
                            InformationSectionId = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3077),
                            OrderBy = 2,
                            RenderTypeId = 8,
                            RowId = new Guid("4014ee47-dd8a-4427-879a-2780a507f0d5")
                        },
                        new
                        {
                            Id = 12L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3079),
                            Description = "Do you use any third-party email platforms or services (e.g., Zimbra, ProtonMail)?",
                            InformationSectionId = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3079),
                            OrderBy = 3,
                            RenderTypeId = 8,
                            RowId = new Guid("9364a22d-28c7-4658-88fe-a1cbee7885f1")
                        },
                        new
                        {
                            Id = 13L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3080),
                            Description = "Is there any secure email gateway or DLP (Data Loss Prevention) solution in place?",
                            InformationSectionId = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3081),
                            OrderBy = 4,
                            RenderTypeId = 8,
                            RowId = new Guid("8bb33097-c7bb-417e-91fd-bade8f8d4294")
                        },
                        new
                        {
                            Id = 14L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3085),
                            Description = "How is business-critical data stored and retained (on-premises, cloud, hybrid)?",
                            InformationSectionId = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3085),
                            OrderBy = 1,
                            RenderTypeId = 8,
                            RowId = new Guid("bb4b9004-e6ff-4c37-a78d-fb373b377064")
                        },
                        new
                        {
                            Id = 15L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3086),
                            Description = "Do you have a documented Records Retention Policy? If yes, can you provide a copy or summary?",
                            InformationSectionId = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3087),
                            OrderBy = 2,
                            RenderTypeId = 8,
                            RowId = new Guid("3e85d641-4437-4145-9aef-c909a6ecf805")
                        },
                        new
                        {
                            Id = 16L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3089),
                            Description = "Do you have a documented Records Retention Policy? If yes, can you provide a copy or summary?",
                            InformationSectionId = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3089),
                            OrderBy = 3,
                            RenderTypeId = 8,
                            RowId = new Guid("b4fa3a32-f9d5-46e3-9a5b-5ca32cae378a")
                        },
                        new
                        {
                            Id = 17L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3091),
                            Description = "Do you have a documented Records Retention Policy? If yes, can you provide a copy or summary?",
                            InformationSectionId = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3091),
                            OrderBy = 4,
                            RenderTypeId = 8,
                            RowId = new Guid("233bf4b6-1642-4846-9541-8b77b8c15a11")
                        },
                        new
                        {
                            Id = 18L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3093),
                            Description = "What SIEM solution do you currently use for ingesting and correlating security data?",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3093),
                            Options = "['SentinalOne','Crowd Strike','None','Other']",
                            OrderBy = 1,
                            RenderTypeId = 6,
                            RowId = new Guid("fbf27a08-0def-4b6d-b790-a32c24a9477a")
                        },
                        new
                        {
                            Id = 19L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3100),
                            Description = "Is your SIEM deployment on-premises or cloud-based?",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3100),
                            OrderBy = 2,
                            RenderTypeId = 8,
                            RowId = new Guid("58a67db8-4f3d-4e06-935f-4f9d38292ca5")
                        },
                        new
                        {
                            Id = 20L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3102),
                            Description = "How many distinct data sources are currently configured to forward logs to the SIEM?",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3102),
                            OrderBy = 3,
                            RenderTypeId = 8,
                            RowId = new Guid("1f438e54-55ce-45a3-bde6-5c849a7d06d6")
                        },
                        new
                        {
                            Id = 21L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3104),
                            Description = "Average volume of data ingested per day",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3104),
                            OrderBy = 4,
                            RenderTypeId = 1,
                            RowId = new Guid("8ba53578-c54c-4c2e-a9f1-c3d10caaf7e4")
                        },
                        new
                        {
                            Id = 22L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3107),
                            Description = "Total data stored as of today",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3108),
                            OrderBy = 5,
                            RenderTypeId = 1,
                            RowId = new Guid("7003680d-caaf-4ff3-98cc-d11ed1fadcbd")
                        },
                        new
                        {
                            Id = 23L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3110),
                            Description = "Log retention period configured",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3110),
                            OrderBy = 6,
                            RenderTypeId = 1,
                            RowId = new Guid("ce0f0278-6ebc-46c0-ad7c-f56f5901fc47")
                        },
                        new
                        {
                            Id = 24L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3112),
                            Description = "How are correlation rules and alerting mechanisms designed and managed?",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3112),
                            OrderBy = 8,
                            RenderTypeId = 8,
                            RowId = new Guid("0f7f0611-08a6-46ed-9c88-25134ed975a9")
                        },
                        new
                        {
                            Id = 25L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3113),
                            Description = "Integration with external tools (e.g., Threat Intelligence platforms, CRM systems, etc.)",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3113),
                            OrderBy = 9,
                            RenderTypeId = 8,
                            RowId = new Guid("75b4b54b-d738-43dc-aa0d-2ae40c974035")
                        },
                        new
                        {
                            Id = 26L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3115),
                            Description = "Orchestration with security infrastructure (e.g., firewalls, web/email gateways, cloud platforms, etc.)",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3116),
                            OrderBy = 10,
                            RenderTypeId = 8,
                            RowId = new Guid("db83715d-8552-4507-99ec-3ca6d6e32649")
                        },
                        new
                        {
                            Id = 27L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3117),
                            Description = "Automated response capabilities (e.g., automatic blocking, IOC reputation lookups, etc.)",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3118),
                            OrderBy = 11,
                            RenderTypeId = 8,
                            RowId = new Guid("ec17c3c2-c555-4054-89e1-7aadb2ace233")
                        },
                        new
                        {
                            Id = 28L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3119),
                            Description = "Have you Previously Conducted Penetration Testing? If yes, please mention the date.",
                            InformationSectionId = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3119),
                            OrderBy = 5,
                            RenderTypeId = 8,
                            RowId = new Guid("e53e1d01-6e51-42c2-bd40-bf7b7d11e4e1")
                        },
                        new
                        {
                            Id = 29L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3121),
                            Description = "What regulatory do you complain with?",
                            InformationSectionId = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3121),
                            Options = "['HIPPA','GDPR','PCIDSS','SOX','ISO/IEC 27001','NIST','CCPA','FERPA','FISMA','Other']",
                            OrderBy = 5,
                            RenderTypeId = 6,
                            RowId = new Guid("a82bcbb0-3bfa-4722-bfac-c407856baf67")
                        },
                        new
                        {
                            Id = 30L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3124),
                            Description = "What regulatory do you need to comply with for log data?",
                            InformationSectionId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3125),
                            OrderBy = 7,
                            RenderTypeId = 8,
                            RowId = new Guid("5828c72a-8d8e-41f2-a0a0-60cb1e745b68")
                        },
                        new
                        {
                            Id = 31L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3127),
                            Description = "Do you currently have Cyber Insurance coverage?",
                            InformationSectionId = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3127),
                            OrderBy = 1,
                            RenderTypeId = 8,
                            RowId = new Guid("8cf66f0e-09cd-44f8-a2aa-5b9c3b11ab5d")
                        },
                        new
                        {
                            Id = 32L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3129),
                            Description = "Do you have an Established Incident response [IR] plan?",
                            InformationSectionId = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3129),
                            OrderBy = 2,
                            RenderTypeId = 8,
                            RowId = new Guid("c12e67ca-90d5-435d-bfb1-874dacfb816c")
                        },
                        new
                        {
                            Id = 33L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3130),
                            Description = "Who is your cyber insurance broker or provider?",
                            InformationSectionId = 7L,
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 326, DateTimeKind.Utc).AddTicks(3130),
                            OrderBy = 3,
                            RenderTypeId = 8,
                            RowId = new Guid("b4d6adde-7e07-41d0-9bb4-d4286ee1f8dd")
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.InformationSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("InformationSection", "Dcube");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6101),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6102),
                            Name = "Environment Overview",
                            OrderBy = 1,
                            RowId = new Guid("e959fce9-d78d-4013-85c1-ca3daec18895")
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6303),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6303),
                            Name = "Endpoint & Device Security",
                            OrderBy = 2,
                            RowId = new Guid("86dd7ac2-f885-47ce-b2f0-4599f3c2a992")
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6305),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6305),
                            Name = "Cloud Infrastructure",
                            OrderBy = 3,
                            RowId = new Guid("5a642ce0-bbc6-415b-a238-f2469c5da01f")
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6307),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6307),
                            Name = "Email & Collaboration Tools",
                            OrderBy = 4,
                            RowId = new Guid("060eb584-3074-4e2b-bfd6-a6d486e2451f")
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6314),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6315),
                            Name = "Data Protection & Governance",
                            OrderBy = 5,
                            RowId = new Guid("49871114-87db-4861-89aa-005e14ef3141")
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6316),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6316),
                            Name = "Security Log Ingestion & Storage",
                            OrderBy = 6,
                            RowId = new Guid("479ca209-fefd-419b-b5e4-ae9abda1b140")
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6318),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 327, DateTimeKind.Utc).AddTicks(6318),
                            Name = "Cyber Insurance",
                            OrderBy = 7,
                            RowId = new Guid("58cfd1d1-436d-40fb-9efa-e0850a29b60a")
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.MetaData.DocumenType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(10);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(9);

                    b.Property<int>("OrderBy")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("DocumentType", "MetaData");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(405),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(407),
                            Name = "Client Details",
                            OrderBy = 3,
                            RowId = new Guid("860d6d43-5fac-4304-bdc1-027ddd4ffdd4")
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(640),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(640),
                            Name = "Client Background",
                            OrderBy = 2,
                            RowId = new Guid("58b9516f-66b3-4c0b-aaca-4fb237097fe3")
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(641),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(642),
                            Name = "Path to Maturity",
                            OrderBy = 1,
                            RowId = new Guid("cb6529c7-961c-4e05-a693-a1066abd555e")
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.MetaData.QuestionResponseWeightageType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(10);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(9);

                    b.Property<int>("OrderBy")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QuestionResponseWeightageType", "MetaData");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 330, DateTimeKind.Utc).AddTicks(5669),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 330, DateTimeKind.Utc).AddTicks(5669),
                            Name = "Yes",
                            OrderBy = 1,
                            RowId = new Guid("61b8d7d0-b7eb-4d63-bf72-f304ae489e09"),
                            Weight = 1m
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 330, DateTimeKind.Utc).AddTicks(5813),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 330, DateTimeKind.Utc).AddTicks(5813),
                            Name = "InProgress",
                            OrderBy = 2,
                            RowId = new Guid("536720bb-173f-4142-872f-8f9fbf6fbf03"),
                            Weight = 0.5m
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 330, DateTimeKind.Utc).AddTicks(5851),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 330, DateTimeKind.Utc).AddTicks(5852),
                            Name = "No",
                            OrderBy = 3,
                            RowId = new Guid("8153b510-9338-4fa1-92a6-0ec9607fdd41"),
                            Weight = 0m
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 330, DateTimeKind.Utc).AddTicks(5853),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 330, DateTimeKind.Utc).AddTicks(5854),
                            Name = "NA",
                            OrderBy = 3,
                            RowId = new Guid("26367f71-372c-4a4a-b5a3-4af8ddd578f9"),
                            Weight = 1m
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.MetaData.QuestionnaireStatusType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(10);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(9);

                    b.Property<int>("OrderBy")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("QuestionnaireStatusType", "MetaData");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(4110),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(4110),
                            Name = "Not Initiated",
                            OrderBy = 1,
                            RowId = new Guid("fd34a9b2-26db-48df-8f1d-1aa4abc6fc9e")
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(4113),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(4113),
                            Name = "In Progress",
                            OrderBy = 2,
                            RowId = new Guid("793a6d03-585a-4afe-ba56-40aada50bec9")
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(4119),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 329, DateTimeKind.Utc).AddTicks(4119),
                            Name = "Completed",
                            OrderBy = 3,
                            RowId = new Guid("0341c87c-3aa9-4823-b116-5035d98a7201")
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.MetaData.RenderType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(10);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(9);

                    b.Property<int>("OrderBy")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("RenderType", "MetaData");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1026),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1027),
                            Name = "TextBox",
                            OrderBy = 1,
                            RowId = new Guid("0ef4db5e-e987-43a2-b329-bf15c000a777")
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1029),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1030),
                            Name = "Number",
                            OrderBy = 2,
                            RowId = new Guid("0da6be4e-a770-454e-94e4-fde55ea7fc00")
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1135),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1136),
                            Name = "DropDown",
                            OrderBy = 3,
                            RowId = new Guid("bbe45e9e-c6e3-4836-8772-02b918aab657")
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1141),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1141),
                            Name = "MultiSelect",
                            OrderBy = 4,
                            RowId = new Guid("51124c42-4327-4a9d-935e-6d5a31ea8147")
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1143),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1143),
                            Name = "DateTimePicker",
                            OrderBy = 5,
                            RowId = new Guid("7d7da920-6ebc-41b1-a986-4cd3084bb372")
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1144),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1145),
                            Name = "CheckBox",
                            OrderBy = 6,
                            RowId = new Guid("ede69a61-880c-4094-97ed-f6257389572b")
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1147),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1147),
                            Name = "RadioButton",
                            OrderBy = 7,
                            RowId = new Guid("f731b936-75d1-44e0-8059-be579cc883ac")
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1149),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1149),
                            Name = "TextArea",
                            OrderBy = 8,
                            RowId = new Guid("2dffec13-2a70-4178-858d-f831910656f0")
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1151),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1151),
                            Name = "RichTextEditor",
                            OrderBy = 9,
                            RowId = new Guid("9c86d267-4884-4bcd-be45-0e52e58d21b2")
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1152),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1153),
                            Name = "AutoSearch",
                            OrderBy = 10,
                            RowId = new Guid("0ee99b31-e533-491b-ab8a-600ef5867613")
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1155),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(1155),
                            Name = "FileUpload",
                            OrderBy = 10,
                            RowId = new Guid("2d31a1a0-7849-4d18-a5f8-c1d7b390cb50")
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.MetaData.RoleType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(10);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(9);

                    b.Property<int>("OrderBy")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("RoleType", "MetaData");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(4288),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(4288),
                            Name = "Admin",
                            OrderBy = 1,
                            RowId = new Guid("7f461a0b-bebb-4590-957e-831593b85aef")
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(4291),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 331, DateTimeKind.Utc).AddTicks(4291),
                            Name = "User",
                            OrderBy = 2,
                            RowId = new Guid("6f9b015d-afec-4539-b1af-51dcfeb7de80")
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.Questionnaire", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Options")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("OrderBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("RenderTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<long>("TemplateSectionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Questionnaire", "Dcube");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(4642),
                            Description = "ID.AM-1: Physical devices and systems within the organization are inventoried",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(4644),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("a7475556-d7d7-4f1b-8ce1-0ae298f40e3a"),
                            TemplateSectionId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5094),
                            Description = "ID.AM-2: Software platforms and applications within the organization are inventoried",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5094),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("8cf9f2dc-cdd0-41f7-b2a4-928541620730"),
                            TemplateSectionId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5096),
                            Description = "ID.AM-3: Organizational communication and data flows are mapped",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5097),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("ac131aa6-9556-410e-bb37-ea276d84e14b"),
                            TemplateSectionId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5099),
                            Description = "ID.AM-4: External information systems are catalogued",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5099),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("38320922-6d5a-406b-93bd-00f9722d42a2"),
                            TemplateSectionId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5101),
                            Description = "ID.AM-5: Resources (e.g., hardware, software, data) are prioritized based on their classification, criticality, and business value",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5101),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("ff2b9f76-3ef8-45b4-bb9e-309002882922"),
                            TemplateSectionId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5102),
                            Description = "ID.AM-6: Cybersecurity roles and responsibilities for the entire workforce and third-party stakeholders (e.g., suppliers, customers, partners) are established",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5103),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 6,
                            RenderTypeId = 7,
                            RowId = new Guid("fe856e9f-0cc5-4ee8-b521-7071a7f38fff"),
                            TemplateSectionId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5125),
                            Description = "ID.BE-1: The organization’s role in the supply chain is identified and communicated",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5126),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("498e0b61-1fd8-4b31-919c-7a2d63fdcf1f"),
                            TemplateSectionId = 3L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5127),
                            Description = "ID.BE-2: The organization’s place in critical infrastructure and its industry sector is identified",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5127),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("9f56a9e6-86ab-4910-bb33-5db2752cdb5d"),
                            TemplateSectionId = 3L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5129),
                            Description = "ID.BE-3: Priorities for organizational mission, objectives, and activities are established and communicated",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5129),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("2c7741c7-99bd-4000-aa44-924d003dd683"),
                            TemplateSectionId = 3L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5130),
                            Description = "ID.BE-4: Dependencies and critical functions for delivery of critical services are established",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5131),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("868517c5-5404-4b66-a955-1408311be9de"),
                            TemplateSectionId = 3L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5133),
                            Description = "ID.BE-5: Resilience requirements to support delivery of critical services are established",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5133),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("e3d3e5d6-7fb7-4880-9e93-3af51937edcb"),
                            TemplateSectionId = 3L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5135),
                            Description = "ID.GV-1: Organizational cybersecurity policy is established and communicated",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5135),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("cf231d15-1370-4ced-a20d-b38ea5f52be1"),
                            TemplateSectionId = 4L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5137),
                            Description = "ID.GV-2: Cybersecurity roles and responsibilities are coordinated and aligned with internal roles and external partners",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5137),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("afcfa3aa-89bf-495a-8bde-fadc3fd0d664"),
                            TemplateSectionId = 4L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5138),
                            Description = "ID.GV-3: Legal and regulatory requirements regarding cybersecurity, including privacy and civil liberties obligations, are understood and managed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5138),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("1ac17894-e29f-4442-969e-5f1527617171"),
                            TemplateSectionId = 4L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5141),
                            Description = "ID.GV-4: Governance and risk management processes address cybersecurity risks",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5141),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("65a91d47-fcb7-448c-98b0-9762565ac574"),
                            TemplateSectionId = 4L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5143),
                            Description = "ID.RA-1: Asset vulnerabilities are identified and documented",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5144),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("ad8d6d94-b357-47d2-a5e9-02de1b264f83"),
                            TemplateSectionId = 5L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5145),
                            Description = "ID.RA-2: Threats, both internal and external, are identified and documented",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5145),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("a397e7bf-6c09-4a8a-8f59-ffb8872cfaa6"),
                            TemplateSectionId = 5L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5147),
                            Description = "ID.RA-3: Potential business impacts and likelihoods are identified",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5148),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("fe3387e6-d429-4bbe-85af-ba5fac20b186"),
                            TemplateSectionId = 5L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5149),
                            Description = "ID.RA-4: Risk responses are identified and prioritized",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5149),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("81e70b3a-7373-4d09-9699-568be0def3d4"),
                            TemplateSectionId = 5L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5155),
                            Description = "ID.RA-5: Risk responses are coordinated with internal and external stakeholders",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5155),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("dd054525-a35e-400a-b51b-7e4ca862bd5b"),
                            TemplateSectionId = 5L
                        },
                        new
                        {
                            Id = 21L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5157),
                            Description = "ID.RA-6: Risk responses are documented and approved by management",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5157),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 6,
                            RenderTypeId = 7,
                            RowId = new Guid("babee1d6-bc4e-4b0a-baf3-5e2d846cdb80"),
                            TemplateSectionId = 5L
                        },
                        new
                        {
                            Id = 22L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5158),
                            Description = "ID.RM-1: Risk management processes are established, managed, and agreed to by organizational stakeholders",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5160),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 6,
                            RenderTypeId = 7,
                            RowId = new Guid("82934cfd-9309-448a-9ff7-2c2d66320fe3"),
                            TemplateSectionId = 6L
                        },
                        new
                        {
                            Id = 23L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5162),
                            Description = "ID.RM-2: Organizational risk tolerance is determined and clearly expressed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5163),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("66b9db38-6ba3-460e-a669-37e8fd05a6f2"),
                            TemplateSectionId = 6L
                        },
                        new
                        {
                            Id = 24L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5164),
                            Description = "ID.RM-3: The organization’s determination of risk tolerance is informed by its role in critical infrastructure and sector risk management practices",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5165),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("d732ced7-6139-4079-85e3-794c6b3156d7"),
                            TemplateSectionId = 6L
                        },
                        new
                        {
                            Id = 25L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5166),
                            Description = "ID.SC-1: Cyber supply chain risk management processes are identified, established, assessed, managed, and agreed to by organizational stakeholders",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5166),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("98205c46-aa12-457d-b55c-8815527a2922"),
                            TemplateSectionId = 7L
                        },
                        new
                        {
                            Id = 26L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5168),
                            Description = "ID.SC-2: Cyber supply chain risks are identified and assessed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5168),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("de4fa784-5edd-4125-bf13-bb735167e69d"),
                            TemplateSectionId = 7L
                        },
                        new
                        {
                            Id = 27L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5169),
                            Description = "ID.SC-3: Contracts with suppliers and third-party partners include cybersecurity requirements",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5169),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("e4d3f946-00b9-4dfe-983d-f768aa9e6f23"),
                            TemplateSectionId = 7L
                        },
                        new
                        {
                            Id = 28L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5171),
                            Description = "ID.SC-4: Suppliers and third-party partners are monitored to ensure compliance with cybersecurity requirements",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5172),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("d570639b-f86f-4653-ac78-33ace16aef93"),
                            TemplateSectionId = 7L
                        },
                        new
                        {
                            Id = 29L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5173),
                            Description = "ID.SC-5: Response and recovery planning and testing are conducted with suppliers and third-party partners",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5174),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("6c2522c5-fd76-41df-9ab6-0f83c05d531c"),
                            TemplateSectionId = 7L
                        },
                        new
                        {
                            Id = 30L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5175),
                            Description = "PR.AC-1: Identities and credentials are issued, managed, verified, revoked, and audited for authorized devices, users and processes",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5176),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("0789c0fa-03a4-4408-8cf9-6623e6a9a569"),
                            TemplateSectionId = 9L
                        },
                        new
                        {
                            Id = 31L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5178),
                            Description = "PR.AC-2: Physical access to assets is managed and protected",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5179),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("b385956e-936f-447f-8a8e-477f577dd206"),
                            TemplateSectionId = 9L
                        },
                        new
                        {
                            Id = 32L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5185),
                            Description = "PR.AC-3: Remote access is managed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5185),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("192dcb33-84e7-4f47-87ac-45b84bea4352"),
                            TemplateSectionId = 9L
                        },
                        new
                        {
                            Id = 33L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5187),
                            Description = "PR.AC-4: Access permissions are managed, incorporating the principles of least privilege and separation of duties",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5187),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("a54bf57e-1f59-492c-8c49-2cfeb4522b35"),
                            TemplateSectionId = 9L
                        },
                        new
                        {
                            Id = 34L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5188),
                            Description = "PR.AC-5: Network integrity is protected (e.g., network segregation, network segmentation)",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5188),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("6242de16-5bf0-47fe-9d45-38299f36a814"),
                            TemplateSectionId = 9L
                        },
                        new
                        {
                            Id = 35L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5190),
                            Description = "PR.AC-6: Identities are proofed and bound to credentials and asserted in interactions",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5191),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 6,
                            RenderTypeId = 7,
                            RowId = new Guid("2c240d03-0e91-4ee3-b2d3-43c61c7f0eab"),
                            TemplateSectionId = 9L
                        },
                        new
                        {
                            Id = 36L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5192),
                            Description = "PR.AC-7: Users, devices, and other assets are authenticated (e.g., single-factor, multi-factor) commensurate with the risk of the transaction (e.g., individuals’ security and privacy risks and other organizational risks)",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5192),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 7,
                            RenderTypeId = 7,
                            RowId = new Guid("d7cbd35c-9e38-4f6b-aa4b-07fd7c20c2e5"),
                            TemplateSectionId = 9L
                        },
                        new
                        {
                            Id = 37L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5194),
                            Description = "PR.AT-1: All users are informed and trained",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5194),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("e6f1f17c-3a6e-425b-ba89-062eb8268944"),
                            TemplateSectionId = 10L
                        },
                        new
                        {
                            Id = 38L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5196),
                            Description = "PR.AT-2: Privileged users understand their roles and responsibilities",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5196),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("8a2165db-c012-423d-a296-f0d6086dde7f"),
                            TemplateSectionId = 10L
                        },
                        new
                        {
                            Id = 39L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5203),
                            Description = "PR.AT-3: Third-party stakeholders (e.g., suppliers, customers, partners) understand their roles and responsibilities",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5203),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("e5750d7b-5415-4296-8c30-9dd33cc93794"),
                            TemplateSectionId = 10L
                        },
                        new
                        {
                            Id = 40L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5205),
                            Description = "PR.AT-4: Senior executives understand their roles and responsibilities",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5205),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("06ed7aa2-0278-49c8-b3db-5caa847eff76"),
                            TemplateSectionId = 10L
                        },
                        new
                        {
                            Id = 41L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5206),
                            Description = "PR.AT-5: Physical and cybersecurity personnel understand their roles and responsibilities",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5207),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("6e552b50-6a45-48b7-91f9-8a25c3f4e8ab"),
                            TemplateSectionId = 10L
                        },
                        new
                        {
                            Id = 42L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5208),
                            Description = "PR.DS-1: Data-at-rest is protected",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5208),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("f7265e7c-3dce-48a6-91f7-394b48cd653d"),
                            TemplateSectionId = 11L
                        },
                        new
                        {
                            Id = 43L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5210),
                            Description = "PR.DS-2: Data-in-transit is protected",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5210),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("f3f8c180-35c9-4b46-b3ba-f95027a9f741"),
                            TemplateSectionId = 11L
                        },
                        new
                        {
                            Id = 44L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5212),
                            Description = "PR.DS-3: Assets are formally managed throughout removal, transfers, and disposition",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5213),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("2182043f-4b72-4e25-8295-452ebbf2384b"),
                            TemplateSectionId = 11L
                        },
                        new
                        {
                            Id = 45L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5218),
                            Description = "PR.DS-4: Adequate capacity to ensure availability is maintained",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5219),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("32f4dc6b-9d17-40f8-92a0-559587cefc8a"),
                            TemplateSectionId = 11L
                        },
                        new
                        {
                            Id = 46L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5220),
                            Description = "PR.DS-5: Protections against data leaks are implemented",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5221),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("2dc41fcc-9618-4f35-9498-8bf215732f71"),
                            TemplateSectionId = 11L
                        },
                        new
                        {
                            Id = 47L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5224),
                            Description = "PR.DS-6: Integrity checking mechanisms are used to verify software, firmware, and information integrity",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5224),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 6,
                            RenderTypeId = 7,
                            RowId = new Guid("fa1f6142-5c5d-4110-9f95-834e0598c196"),
                            TemplateSectionId = 11L
                        },
                        new
                        {
                            Id = 48L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5226),
                            Description = "PR.DS-7: The development and testing environment(s) are separate from the production environment",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5226),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 7,
                            RenderTypeId = 7,
                            RowId = new Guid("f3a2a6d1-2d67-4fcd-b042-29d71354eb2e"),
                            TemplateSectionId = 11L
                        },
                        new
                        {
                            Id = 49L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5227),
                            Description = "PR.DS-8: Integrity checking mechanisms are used to verify hardware integrity",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5227),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 8,
                            RenderTypeId = 7,
                            RowId = new Guid("84e8c900-bc6a-48be-ab74-bbdbd2e6556f"),
                            TemplateSectionId = 11L
                        },
                        new
                        {
                            Id = 50L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5229),
                            Description = "PR.IP-1: A baseline configuration of information technology/industrial control systems is created and maintained incorporating security principles (e.g., least functionality)",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5229),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("c2e8aa9d-43b1-4f07-bc9b-a30f67b274d9"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 51L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5230),
                            Description = "PR.IP-2: A System Development Life Cycle to manage systems is implemented",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5231),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("42fb912a-2aef-45ad-a574-8937a94cad90"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 52L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5233),
                            Description = "PR.IP-3: Configuration change control processes are in place",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5233),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("8cc8d689-973a-4a3d-b630-a5dd5cd1a684"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 53L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5235),
                            Description = "PR.IP-4: Backups of information are conducted, maintained, and tested periodically",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5235),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("92086163-b183-4de2-8a24-52dfcdec44a9"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 54L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5237),
                            Description = "PR.IP-5: Policy and regulations regarding the physical operating environment for organizational assets are met",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5237),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("b801783a-7bcf-4fce-8cb7-d41e111b81ab"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 55L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5240),
                            Description = "PR.IP-6: Data is destroyed according to policy",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5240),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 6,
                            RenderTypeId = 7,
                            RowId = new Guid("bc505bf1-affd-4d09-b783-3d205c9a3a40"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 56L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5241),
                            Description = "PR.IP-7: Protection processes are improved",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5241),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 7,
                            RenderTypeId = 7,
                            RowId = new Guid("fa61a1ea-f881-48f5-ba5c-1e8e3e092af6"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 57L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5243),
                            Description = "PR.IP-8: Effectiveness of protection technologies is shared",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5244),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 8,
                            RenderTypeId = 7,
                            RowId = new Guid("d49de25e-4e88-4021-88b6-4140abce910a"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 58L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5249),
                            Description = "PR.IP-9: Response and recovery plans are in place and managed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5250),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 9,
                            RenderTypeId = 7,
                            RowId = new Guid("0f27a110-0c6a-4690-9b99-fe68751b263c"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 59L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5252),
                            Description = "PR.IP-10: Response and recovery plans are tested",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5252),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 10,
                            RenderTypeId = 7,
                            RowId = new Guid("997abe0e-8ed3-4eed-9343-35bcae5da9f0"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 60L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5253),
                            Description = "PR.IP-11: Cybersecurity is included in human resources practices (e.g., deprovisioning, personnel screening)",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5254),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 11,
                            RenderTypeId = 7,
                            RowId = new Guid("99a56cb2-e284-4df3-94d4-2459d0acf572"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 61L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5255),
                            Description = "PR.IP-12: A vulnerability management plan is developed and implemented",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5255),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 12,
                            RenderTypeId = 7,
                            RowId = new Guid("0d5d28d2-e937-43d4-9891-485facabbdfd"),
                            TemplateSectionId = 12L
                        },
                        new
                        {
                            Id = 62L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5257),
                            Description = "PR.MA-1: Maintenance and repair of organizational assets are performed and logged, with approved and controlled tools",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5257),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("60a73766-01ad-4f17-a93c-915328d0ce92"),
                            TemplateSectionId = 13L
                        },
                        new
                        {
                            Id = 63L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5260),
                            Description = "PR.MA-2: Remote maintenance of organizational assets is approved, logged, and performed in a manner that prevents unauthorized access",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5260),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("9add6e25-aedf-4d00-b46b-2237802f94d9"),
                            TemplateSectionId = 13L
                        },
                        new
                        {
                            Id = 64L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5262),
                            Description = "PR.PT-1: Audit/log records are determined, documented, implemented, and reviewed in accordance with policy",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5263),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("966501c6-f0cf-4868-8414-20ff2da6f90a"),
                            TemplateSectionId = 14L
                        },
                        new
                        {
                            Id = 65L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5264),
                            Description = "PR.PT-2: Removable media is protected and its use restricted according to policy",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5264),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("7c182ab9-a1e1-46e6-b0ff-c0c9e73fe605"),
                            TemplateSectionId = 14L
                        },
                        new
                        {
                            Id = 66L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5266),
                            Description = "PR.PT-3: Access to systems and assets is controlled, incorporating the principle of least functionality",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5266),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("91ca3d65-5032-41da-8c15-ed8f7a25995f"),
                            TemplateSectionId = 14L
                        },
                        new
                        {
                            Id = 67L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5267),
                            Description = "PR.PT-4: Communications and control networks are protected",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5268),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("d80bf782-bd52-49bf-b465-afffdd3c7c2c"),
                            TemplateSectionId = 14L
                        },
                        new
                        {
                            Id = 68L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5269),
                            Description = "PR.PT-5: Mechanisms (e.g., failsafe, load balancing, hot swap) are implemented to achieve resilience requirements in normal and adverse situations",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5269),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("a7a68c85-d765-4e75-b766-f61d2a8da99b"),
                            TemplateSectionId = 14L
                        },
                        new
                        {
                            Id = 69L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5271),
                            Description = "DE.AE-1: A baseline of network operations and expected data flows for users and systems is established and managed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5271),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("809fc63b-3a76-43e7-809b-fd57503c3995"),
                            TemplateSectionId = 16L
                        },
                        new
                        {
                            Id = 70L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5277),
                            Description = "DE.AE-2: Detected events are analyzed to understand attack targets and methods",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5277),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("fad2eed2-5738-4d7c-b4df-07345a20dd05"),
                            TemplateSectionId = 16L
                        },
                        new
                        {
                            Id = 71L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5280),
                            Description = "DE.AE-3: Event data are collected and correlated from multiple sources and sensors",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5281),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("72ea1035-bbfa-48e0-9999-4dd57bd1c960"),
                            TemplateSectionId = 16L
                        },
                        new
                        {
                            Id = 72L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5282),
                            Description = "DE.AE-4: Impact of events is determined",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5283),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("af509134-cfbe-4a2d-ba56-89b6218dcb6c"),
                            TemplateSectionId = 16L
                        },
                        new
                        {
                            Id = 73L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5285),
                            Description = "DE.AE-5: Incident alert thresholds are established",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5285),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("c0dc9db2-816b-4e8d-8d26-9894e80db29f"),
                            TemplateSectionId = 16L
                        },
                        new
                        {
                            Id = 74L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5286),
                            Description = "DE.CM-1: The network is monitored to detect potential cybersecurity events",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5287),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("cbd68cf1-3237-49c3-ac38-7718cf23d01c"),
                            TemplateSectionId = 17L
                        },
                        new
                        {
                            Id = 75L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5288),
                            Description = "DE.CM-2: The physical environment is monitored to detect potential cybersecurity events",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5288),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("2742d675-2dc4-4683-8d89-769ae5950000"),
                            TemplateSectionId = 17L
                        },
                        new
                        {
                            Id = 76L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5290),
                            Description = "DE.CM-3: Personnel activity is monitored to detect potential cybersecurity events",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5290),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("ddecc86b-adc7-4399-acf8-2b18e5920417"),
                            TemplateSectionId = 17L
                        },
                        new
                        {
                            Id = 77L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5291),
                            Description = "DE.CM-4: Malicious code is detected",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5292),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("607697e2-1841-44f8-8596-acd38bcca2fb"),
                            TemplateSectionId = 17L
                        },
                        new
                        {
                            Id = 78L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5294),
                            Description = "DE.CM-5: Unauthorized mobile code is detected",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5294),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("e36f8067-d43b-4f72-928f-7c90846ac976"),
                            TemplateSectionId = 17L
                        },
                        new
                        {
                            Id = 79L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5298),
                            Description = "DE.CM-6: External service provider activity is monitored to detect potential cybersecurity events",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5298),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 6,
                            RenderTypeId = 7,
                            RowId = new Guid("e169ecbf-9ca2-499f-8537-67771e93a67a"),
                            TemplateSectionId = 17L
                        },
                        new
                        {
                            Id = 80L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5299),
                            Description = "DE.CM-7: Monitoring for unauthorized personnel, connections, devices, and software is performed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5300),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 7,
                            RenderTypeId = 7,
                            RowId = new Guid("4a63261f-ba1f-4bf3-9116-3c966e6ce5b9"),
                            TemplateSectionId = 17L
                        },
                        new
                        {
                            Id = 81L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5302),
                            Description = "DE.CM-8: Vulnerability scans are performed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5302),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 8,
                            RenderTypeId = 7,
                            RowId = new Guid("f7afb265-6571-4a8c-a724-e43946fc7a98"),
                            TemplateSectionId = 17L
                        },
                        new
                        {
                            Id = 82L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5303),
                            Description = "DE.DP-1: Roles and responsibilities for detection are well defined to ensure accountability",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5304),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("b91694cf-a90e-4f83-bd6e-2bb269b84c1f"),
                            TemplateSectionId = 18L
                        },
                        new
                        {
                            Id = 83L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5310),
                            Description = "DE.DP-2: Detection activities comply with all applicable requirements",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5310),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("baa0238c-67e4-4fe3-9e3c-a4eea7cbf593"),
                            TemplateSectionId = 18L
                        },
                        new
                        {
                            Id = 84L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5312),
                            Description = "DE.DP-3: Detection processes are tested",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5312),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("b5ad2974-2259-4899-a4c9-e2c24132d183"),
                            TemplateSectionId = 18L
                        },
                        new
                        {
                            Id = 85L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5313),
                            Description = "DE.DP-4: Event detection information is communicated",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5313),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("8b64b94c-5382-4e04-899c-91d46d2fe0d5"),
                            TemplateSectionId = 18L
                        },
                        new
                        {
                            Id = 86L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5315),
                            Description = "DE.DP-5: Detection processes are continuously improved",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5316),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("7ce26e02-b50e-434a-abde-368997c0020c"),
                            TemplateSectionId = 18L
                        },
                        new
                        {
                            Id = 87L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5318),
                            Description = "RS.RP-1: Response plan is executed during or after an incident",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5319),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("d048966e-860d-4d17-a03d-0305c37a752a"),
                            TemplateSectionId = 20L
                        },
                        new
                        {
                            Id = 88L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5320),
                            Description = "RS.CO-1: Personnel know their roles and order of operations when a response is needed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5320),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("c4bdfbf6-ada6-4a3b-b07c-72690edf9215"),
                            TemplateSectionId = 21L
                        },
                        new
                        {
                            Id = 89L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5322),
                            Description = "RS.CO-2: Incidents are reported consistent with established criteria",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5323),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("e6255281-e47c-4829-aad9-2d7b47bf10ae"),
                            TemplateSectionId = 21L
                        },
                        new
                        {
                            Id = 90L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5324),
                            Description = "RS.CO-3: Information is shared consistent with response plans",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5324),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("2543a6c1-4f07-414a-9fe1-ce84de5dd1ab"),
                            TemplateSectionId = 21L
                        },
                        new
                        {
                            Id = 91L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5326),
                            Description = "RS.CO-4: Coordination with stakeholders occurs consistent with response plans",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5326),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("694a1fff-82fb-43ba-be2e-4e91809f23f9"),
                            TemplateSectionId = 21L
                        },
                        new
                        {
                            Id = 92L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5328),
                            Description = "RS.CO-5: Voluntary information sharing occurs with external stakeholders to achieve broader cybersecurity situational awareness",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5329),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("9af1ca31-bec1-4ae2-a633-42b3e3227c04"),
                            TemplateSectionId = 21L
                        },
                        new
                        {
                            Id = 93L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5330),
                            Description = "RS.AN-1: Notifications from detection systems are investigated",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5330),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("fc81db5e-5e25-42d8-9148-ea0ef4905211"),
                            TemplateSectionId = 22L
                        },
                        new
                        {
                            Id = 94L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5332),
                            Description = "RS.AN-2: The impact of the incident is understood",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5332),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("b7d3f704-3d39-4a23-9698-6ff6da101b26"),
                            TemplateSectionId = 22L
                        },
                        new
                        {
                            Id = 95L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5340),
                            Description = "RS.AN-3: Forensics are performed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5340),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("9c780957-cd4b-4dfe-8d42-2d51ecb9d7fb"),
                            TemplateSectionId = 22L
                        },
                        new
                        {
                            Id = 96L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5341),
                            Description = "RS.AN-4: Incidents are categorized consistent with response plans",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5341),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("918e6d01-4a8b-4985-aaab-54634ae91b6e"),
                            TemplateSectionId = 22L
                        },
                        new
                        {
                            Id = 97L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5343),
                            Description = "RS.AN-5: Processes are established to receive, analyze and respond to vulnerabilities disclosed to the organization from internal and external sources (e.g. internal testing, security bulletins, or security researchers)",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5344),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("b1d40f5b-71f4-42c2-ba14-047f3d4ce805"),
                            TemplateSectionId = 22L
                        },
                        new
                        {
                            Id = 98L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5345),
                            Description = "RS.MI-1: Incidents are contained",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5345),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("0c9f3c02-7629-4bd1-88f6-a86a89445340"),
                            TemplateSectionId = 23L
                        },
                        new
                        {
                            Id = 99L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5347),
                            Description = "RS.MI-2: Incidents are mitigated",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5348),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("a3e5b283-9d6f-4cb0-8e12-324865c9a925"),
                            TemplateSectionId = 23L
                        },
                        new
                        {
                            Id = 100L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5349),
                            Description = "RS.MI-3: Newly identified vulnerabilities are mitigated or documented as accepted risks",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5349),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("35124d87-5674-4585-a12c-03a3cfd27c75"),
                            TemplateSectionId = 23L
                        },
                        new
                        {
                            Id = 101L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5351),
                            Description = "RS.IM-1: Response plans incorporate lessons learned",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5351),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 4,
                            RenderTypeId = 7,
                            RowId = new Guid("b3d7b61d-4fd0-434e-97f5-6fd33e2a7d86"),
                            TemplateSectionId = 24L
                        },
                        new
                        {
                            Id = 102L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5352),
                            Description = "RS.IM-2: Response strategies are updated",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5352),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 5,
                            RenderTypeId = 7,
                            RowId = new Guid("ca3c3f4e-cbc6-4cbb-9c4f-d8be70328601"),
                            TemplateSectionId = 24L
                        },
                        new
                        {
                            Id = 103L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5355),
                            Description = "RC.RP-1: Recovery plan is executed during or after a cybersecurity incident",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5356),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("e03d87be-487c-4bbf-9cbc-cebc79ec6bdd"),
                            TemplateSectionId = 26L
                        },
                        new
                        {
                            Id = 104L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5357),
                            Description = "RC.IM-1: Recovery plans incorporate lessons learned into future activities",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5358),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("d9ba4e87-ea10-4f3b-b910-ff0d5fcde88c"),
                            TemplateSectionId = 27L
                        },
                        new
                        {
                            Id = 105L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5360),
                            Description = "RC.IM-2: Recovery strategies are updated",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5360),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("b266753a-d13b-4097-a779-55e17060f6f0"),
                            TemplateSectionId = 27L
                        },
                        new
                        {
                            Id = 106L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5361),
                            Description = "RC.CO-1: Public relations are managed",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5362),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 1,
                            RenderTypeId = 7,
                            RowId = new Guid("6d514995-b000-4899-a61e-5aaac43eb90f"),
                            TemplateSectionId = 28L
                        },
                        new
                        {
                            Id = 107L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5365),
                            Description = "RC.CO-2: Reputation is repaired after an incident",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5366),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 2,
                            RenderTypeId = 7,
                            RowId = new Guid("96b7d06b-8c71-48e8-9905-8f0d4ba19904"),
                            TemplateSectionId = 28L
                        },
                        new
                        {
                            Id = 108L,
                            CreatedBy = 0L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5367),
                            Description = "RC.CO-3: Recovery activities are communicated to internal and external stakeholders as well as executive and management teams",
                            IsActive = true,
                            IsDeleted = false,
                            IsMandatory = true,
                            ModifiedBy = 0L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 335, DateTimeKind.Utc).AddTicks(5367),
                            Options = "[YES,Inprogress,NO,NA]",
                            OrderBy = 3,
                            RenderTypeId = 7,
                            RowId = new Guid("eb3149da-5e80-442a-ad0a-26d3c00c4c22"),
                            TemplateSectionId = 28L
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.Template", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_Template_Name");

                    b.ToTable("Template", "Dcube");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 336, DateTimeKind.Utc).AddTicks(244),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 336, DateTimeKind.Utc).AddTicks(244),
                            Name = "Cybersecurity Default Template",
                            RowId = new Guid("138b87c2-bf0f-4dde-afbf-93fa52d10f53")
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.TemplateSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<long?>("ParentSectionId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<long>("TemplateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TemplateSection", "Dcube");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2440),
                            Description = "The NIST CSF “Identify” function helps assess systems, assets, data, business context, and resources to understand and manage cybersecurity risk.  The components of the Identify function are the foundation for cybersecurity readiness.  Identifying the components that are critical to the enterprise’s infrastructure helps to focus and prioritise development of cybersecurity processes that are consistent with risk management strategy and organisational needs.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2441),
                            Name = "IDENTITY (ID)",
                            OrderBy = 1,
                            RowId = new Guid("b6dded12-55cb-4912-b36e-2636ecf32f76"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2893),
                            Description = "Asset Management (ID.AM): The data, personnel, devices, systems, and facilities that enable the enterprise to achieve business purposes are identified and managed consistent with their relative importance to organisational objectives and the enterprises’s risk strategy.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2893),
                            Name = "Asset Management (ID.AM)",
                            OrderBy = 1,
                            ParentSectionId = 1L,
                            RowId = new Guid("7a46c9ef-7b9f-4420-97f7-99d11a58fae3"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2899),
                            Description = "Business Environment (ID.BE): The enterprise’s mission, objectives, stakeholders, and activities are understood and prioritised; this information is used to inform cybersecurity roles, responsibilities, and risk management decisions.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2899),
                            Name = "Business Environment (ID.BE)",
                            OrderBy = 2,
                            ParentSectionId = 1L,
                            RowId = new Guid("53ec5ef5-42a4-4980-8071-da229a0a2d78"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2901),
                            Description = "Governance (ID.GV): The policies, procedures, and processes to manage and monitor the enterprise’s regulatory, legal, risk, environmental, and operational requirements are understood and inform the management of cybersecurity risk.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2902),
                            Name = "Governance (ID.GV)",
                            OrderBy = 3,
                            ParentSectionId = 1L,
                            RowId = new Guid("7b8d4625-e90c-4175-86eb-2e4e622f9ed3"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2904),
                            Description = "Risk Assessment (ID.RA): The organization understands the cybersecurity risk to organizational operations (including mission, functions, image, or reputation), organizational assets, and individuals.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2904),
                            Name = "Risk Assessment (ID.RA)",
                            OrderBy = 4,
                            ParentSectionId = 1L,
                            RowId = new Guid("aff0fae0-94e2-4abe-91c6-041ba7f3da0d"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2905),
                            Description = "Risk Management Strategy (ID.RM): The organization’s priorities, constraints, risk tolerances, and assumptions are established and used to support operational risk decisions.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2906),
                            Name = "Risk Management Strategy (ID.RM)",
                            OrderBy = 5,
                            ParentSectionId = 1L,
                            RowId = new Guid("98e44937-8476-4ea0-9206-1158c457182b"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2908),
                            Description = "Supply Chain Risk Management (ID.SC): The organization’s priorities, constraints, risk tolerances, and assumptions are established and used to support risk decisions associated with managing supply chain risk. The organization has established and implemented the processes to identify, assess and manage supply chain risks.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2908),
                            Name = "Supply Chain Risk Management (ID.SC)",
                            OrderBy = 6,
                            ParentSectionId = 1L,
                            RowId = new Guid("d2ffd61e-b845-4958-8512-7d759299ee89"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2916),
                            Description = "The NIST CSF “Protect” function aims to ensure continuity of critical infrastructure services.  This function provides the framework for providers to develop and implement the appropriate safeguards to limit or contain the potential impact of a cybersecurity event.  The organisational safeguards assessed include access control, awareness and training, data security, information protection processes and procedures, maintenance, and protective technology.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2916),
                            Name = "PROTECT (PR)",
                            OrderBy = 2,
                            RowId = new Guid("e7a027b1-ecad-4a7a-bcf5-a976d4f4550f"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2918),
                            Description = "Identity Management, Authentication and Access Control (PR.AC): Access to physical and logical assets and associated facilities is limited to authorized users, processes, and devices, and is managed consistent with the assessed risk of unauthorized access to authorized activities and transactions.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2919),
                            Name = "Identity Management, Authentication and Access Control (PR.AC)",
                            OrderBy = 1,
                            ParentSectionId = 8L,
                            RowId = new Guid("8d92e4bb-edb4-4cc0-8aba-94d210139184"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2922),
                            Description = "Awareness and Training (PR.AT): The organization’s personnel and partners are provided cybersecurity awareness education and are trained to perform their cybersecurity-related duties and responsibilities consistent with related policies, procedures, and agreements.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2923),
                            Name = "Awareness and Training (PR.AT)",
                            OrderBy = 2,
                            ParentSectionId = 8L,
                            RowId = new Guid("5178a855-b562-404d-bcee-c7b578bbdd98"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2924),
                            Description = "Data Security (PR.DS): Information and records (data) are managed consistent with the organization’s risk strategy to protect the confidentiality, integrity, and availability of information.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2924),
                            Name = "Data Security (PR.DS)",
                            OrderBy = 3,
                            ParentSectionId = 8L,
                            RowId = new Guid("9e4d4a1b-c3ed-469c-923a-b606b5005823"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2926),
                            Description = "Information Protection Processes and Procedures (PR.IP): Security policies (that address purpose, scope, roles, responsibilities, management commitment, and coordination among organizational entities), processes, and procedures are maintained and used to manage protection of information systems and assets.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2927),
                            Name = "Information Protection Processes and Procedures (PR.IP)",
                            OrderBy = 4,
                            ParentSectionId = 8L,
                            RowId = new Guid("70a16142-25e5-4cfb-be12-ff4e5db7f2c7"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2928),
                            Description = "Maintenance and repairs of industrial control and information system components are performed consistent with policies and procedures.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2929),
                            Name = "Maintenance (PR.MA)",
                            OrderBy = 5,
                            ParentSectionId = 8L,
                            RowId = new Guid("f9c3d90b-e288-448d-a9d0-dad2a2c2f2a1"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2930),
                            Description = "Protective Technology (PR.PT): Technical security solutions are managed to ensure the security and resilience of systems and assets, consistent with related policies, procedures, and agreements.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2930),
                            Name = "Protective Technology (PR.PT)",
                            OrderBy = 6,
                            ParentSectionId = 8L,
                            RowId = new Guid("489a7417-3b7a-4a12-af64-6d55e97a3157"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2932),
                            Description = "The NIST CSF “Detect” function aims to ensure cybersecurity incidents can be identified in a timely manner.  This function assists providers in assessing procedures to rapidly identify cyber events, test detection processes, analyse data to understand attack targets and methods, and inform improvements to organisational processes.  The organisational safeguards assessed include anomalies and events, security continuous monitoring, and detection processes.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2933),
                            Name = "DETECT (DE)",
                            OrderBy = 3,
                            RowId = new Guid("900a0e1a-4236-4581-b04d-2339c74b1b31"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2935),
                            Description = "Anomalies and Events (DE.AE): Anomalous activity is detected in a timely manner and the potential impact of events is understood.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2935),
                            Name = "Anomalies and Events (DE.AE)",
                            OrderBy = 1,
                            ParentSectionId = 15L,
                            RowId = new Guid("6beb7806-7913-4030-b401-f898c3c2f887"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2941),
                            Description = "Security Continuous Monitoring (DE.CM): The information system and assets are monitored to identify cybersecurity events and verify the effectiveness of protective measures.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2941),
                            Name = "Security Continuous Monitoring (DE.CM)",
                            OrderBy = 2,
                            ParentSectionId = 15L,
                            RowId = new Guid("a0e9d514-8ee3-453a-af94-32f0f34c709b"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2944),
                            Description = "Detection Processes (DE.DP): Detection processes and procedures are maintained and tested to ensure awareness of anomalous events.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2944),
                            Name = "Detection Processes (DE.DP)",
                            OrderBy = 2,
                            ParentSectionId = 15L,
                            RowId = new Guid("a06ffac6-c5d7-4deb-a0ef-776629d8fd3c"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2947),
                            Description = "The NIST CSF “Respond” function aims to assist providers to contain the impact of a potential cybersecurity event. This function supports providers in assessing current processes in place to respond to a detected cybersecurity event.  The organisational safeguards assessed include:  response planning, communications, analysis, mitigation, and improvements.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2947),
                            Name = "RESPOND (RS)",
                            OrderBy = 4,
                            RowId = new Guid("f8038c55-1f3e-4b9b-be2e-524a01c5fb92"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2949),
                            Description = "Response Planning (RS.RP): Response processes and procedures are executed and maintained to ensure timely response to detected cybersecurity incidents.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2949),
                            Name = "Response Planning (RS.RP)",
                            OrderBy = 1,
                            ParentSectionId = 19L,
                            RowId = new Guid("57f28936-a1c8-41a7-80e3-9c4399af76e2"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 21L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2951),
                            Description = "Communications (RS.CO): Response activities are coordinated with internal and external stakeholders (e.g., external support from law enforcement agencies).",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2951),
                            Name = "Communications (RS.CO)",
                            OrderBy = 2,
                            ParentSectionId = 19L,
                            RowId = new Guid("15dc9131-6a31-4a5f-ac0c-235b7adf78ac"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 22L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2953),
                            Description = "Analysis (RS.AN): Analysis is conducted to ensure effective response and support recovery activities.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2953),
                            Name = "Analysis (RS.AN)",
                            OrderBy = 3,
                            ParentSectionId = 19L,
                            RowId = new Guid("1673534a-b95e-48ad-9f39-9abc39013430"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 23L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2955),
                            Description = "Mitigation (RS.MI): Activities are performed to prevent expansion of an event, mitigate its effects, and resolve the incident.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2955),
                            Name = "Mitigation (RS.MI)",
                            OrderBy = 4,
                            ParentSectionId = 19L,
                            RowId = new Guid("1e5f750f-7c1c-42bf-aff5-66acf14f6d46"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 24L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2957),
                            Description = "Improvements (RS.IM): Organizational response activities are improved by incorporating lessons learned from current and previous detection/response activities.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2957),
                            Name = "Improvements (RS.IM)",
                            OrderBy = 5,
                            ParentSectionId = 19L,
                            RowId = new Guid("7c9a27b8-3272-4c9d-860e-487e7977242a"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 25L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2958),
                            Description = "The NIST CSF “Recover” function aims to assist providers to restore any capabilities or services that were impaired due to a cybersecurity event.  This function supports providers in assessing current processes in place to recover from a detected cybersecurity event.  The organisational safeguards assessed include: recovery planning, improvements, and communications.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2960),
                            Name = "RECOVER (RC)",
                            OrderBy = 5,
                            RowId = new Guid("5fd5946f-08cd-4076-b63b-3e23bd5a7987"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 26L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2963),
                            Description = "Recovery Planning (RC.RP): Recovery processes and procedures are executed and maintained to ensure timely restoration of systems or assets affected by cybersecurity incidents.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2963),
                            Name = "Recovery Planning (RC.RP)",
                            OrderBy = 1,
                            ParentSectionId = 25L,
                            RowId = new Guid("e95d65b1-13f4-4b11-b2ee-71d7f2d7c891"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 27L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2965),
                            Description = "Improvements (RC.IM): Recovery planning and processes are improved by incorporating lessons learned into future activities.",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2965),
                            Name = "Improvements (RC.IM)",
                            OrderBy = 2,
                            ParentSectionId = 25L,
                            RowId = new Guid("c890e165-8555-4179-b98d-f7aa31228416"),
                            TemplateId = 1L
                        },
                        new
                        {
                            Id = 28L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2966),
                            Description = "Communications (RC.CO): Restoration activities are coordinated with internal and external stakeholders (e.g., external support from law enforcement agencies).",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 337, DateTimeKind.Utc).AddTicks(2967),
                            Name = "Communications (RC.CO)",
                            OrderBy = 3,
                            ParentSectionId = 25L,
                            RowId = new Guid("e5703b72-d026-4782-aeb1-bbc8ca462adb"),
                            TemplateId = 1L
                        });
                });

            modelBuilder.Entity("DCube.Questionnaire.Repository.Domain.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("RowId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("IX_User_UserName");

                    b.ToTable("User", "Dcube");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "123 Main St, City, Country",
                            ClientId = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1210),
                            FirstName = "Krishna Chaitanya",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kona",
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1211),
                            Password = "$2b$12$YAP.oTkyjlqbzrIRvAK9l.fLapZLtJy/eRLHMD0.KjTmS5CZARf6y",
                            PhoneNumber = "1234567890",
                            RoleId = 1L,
                            RowId = new Guid("0f08c205-2e4e-4591-a4ed-5895aace3004"),
                            UserName = "kkona@konaai.com"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "123 Main St, City, Country",
                            ClientId = 1L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1829),
                            FirstName = "Krishna",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kona",
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1830),
                            Password = "$2b$12$YAP.oTkyjlqbzrIRvAK9l.fLapZLtJy/eRLHMD0.KjTmS5CZARf6y",
                            PhoneNumber = "1134457890",
                            RoleId = 2L,
                            RowId = new Guid("a5fe087c-484c-4690-b509-987ced55d4d4"),
                            UserName = "kkona@dcubedata.com"
                        },
                        new
                        {
                            Id = 3L,
                            Address = "123 Main St, City, Country",
                            ClientId = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1833),
                            FirstName = "Chaitanya",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kona",
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1833),
                            Password = "$2b$12$YAP.oTkyjlqbzrIRvAK9l.fLapZLtJy/eRLHMD0.KjTmS5CZARf6y",
                            PhoneNumber = "4444567890",
                            RoleId = 2L,
                            RowId = new Guid("02647125-e070-4c50-91cc-d9982849cbc9"),
                            UserName = "chaitanya.kona@covasant.com"
                        },
                        new
                        {
                            Id = 4L,
                            Address = "123 Main St, City, Country",
                            ClientId = 2L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1836),
                            FirstName = "Hima Bindu",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kona",
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1837),
                            Password = "$2b$12$YAP.oTkyjlqbzrIRvAK9l.fLapZLtJy/eRLHMD0.KjTmS5CZARf6y",
                            PhoneNumber = "1234560000",
                            RoleId = 2L,
                            RowId = new Guid("5ab05795-2e53-429a-84ea-fb985451c96a"),
                            UserName = "konachaitanya@gmail.com"
                        },
                        new
                        {
                            Id = 5L,
                            Address = "123 Main St, City, Country",
                            ClientId = 3L,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1838),
                            FirstName = "Kevin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Williams",
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2025, 7, 18, 5, 24, 34, 338, DateTimeKind.Utc).AddTicks(1838),
                            Password = "$2b$12$YAP.oTkyjlqbzrIRvAK9l.fLapZLtJy/eRLHMD0.KjTmS5CZARf6y",
                            PhoneNumber = "6444553789",
                            RoleId = 2L,
                            RowId = new Guid("6c4c036b-1edf-4e57-9349-6666b9ccd0ed"),
                            UserName = "konachaitanya@hotmail.com"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
